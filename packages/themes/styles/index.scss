/* ******************************************************************************************************************************************************* */
/* LICENSED UNDER THE MIT LICENSE. SEE LICENSE FILE IN THE PROJECT ROOT FOR FULL LICENSE INFORMATION.                                                      */
/* COPYRIGHT Â© 2006 - 2023 WANG YUCAI. ALL RIGHTS RESERVED.                                                                                                */
/* ******************************************************************************************************************************************************* */

@use "sass:math" as *;
@use "sass:map" as *;
@use "./lib/variables" as vars;
@use "./lib/colors" as colors;

:root {
	@each $-textsize-key, $-textsize-value in vars.$textsize-map {
		--def-text#{$-textsize-key}: #{div($-textsize-value, vars.$base-value)}rem;
	}

	--def-font-family: "Microsoft Yahei";
	@include colors.generate-color-variables;
}

@each $-key in vars.$color-list {
	.#{$-key} {
		background-color: var(--def-#{$-key});
	}

	.#{$-key}-text {
		background-color: var(--def-#{$-key});
	}
}

.text {
	@at-root &-reference {
		font-size: #{vars.$base-value}px;
	}

	@each $-textsize-key, $-textsize-value in vars.$textsize-map {
		@at-root &#{$-textsize-key} {
			font-size: var(--def-text#{$-textsize-key});
		}
	}
}

.italic {
	font-style: italic;
}

@each $-item in ("bold", "bolder") {
	.#{$-item} {
		font-weight: #{$-item};
	}

	.#{$-item}-italic {
		@extend .#{$-item};
		@extend .italic;
	}
}

@each $-item in ("absolute", "relative", "fixed") {
	.#{$-item} {
		position: #{$-item};
	}
}

@each $-item in ("block", "inline", "inline-block", "flex") {
	.#{$-item} {
		display: #{$-item};
	}
}

.justify-content {
	@each $-key, $-value in deep-merge(vars.$flexalign-basemap, vars.$flexalign-horizontalmap) {
		@at-root &-#{$-key} {
			@extend .flex;
			justify-content: #{$-value};
		}
	}
}

.align-items {
	@each $-key, $-value in deep-merge(vars.$flexalign-basemap, vars.$flexalign-verticalmap) {
		@at-root &-#{$-key} {
			@extend .flex;
			align-items: #{$-value};
		}
	}
}

.flex {
	@each $-item in vars.$flexdirection-list {
		@at-root &-#{$-item} {
			@extend .flex;
			flex-direction: #{$-item};
		}
	}

	@each $-item in vars.$flexwrap-list {
		@at-root &-#{$-item} {
			@extend .flex;
			flex-wrap: #{$-item};
		}
	}

	> .average-grow {
		flex-grow: 1;
	}

	> .no-shrink {
		flex-shrink: 0;
	}
}

* {
	font-family: var(--def-font-family);
}

div {
	@extend .relative;
}

html {
	@extend .text-reference;
}
